spring.application.name=reservacion-citas
server.servlet.context-path=/api

## Configuración para la BD
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

##Credenciales de Calendly
calendly.api.url=https://api.calendly.com/
calendly.token=${CALENDLY_PERSONAL_ACCESS_TOKEN}
calendly.org.url=${ORGANIZATION_URL_IN_CALENDLY}
calendly.user.url=${USER_URL_IN_CALENDLY}
calendly.scope=user

##Endpoint para manejar webhook, evento: invitee.created de Calendly
calendly.url.webhook.invitee.created=${PUBLIC_URL_TO_WEBHOOK}/api/webhooks/calendars/invitee_created

## Configuración para el servicio de emails
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

## Configuracion para el JWT
jwt.secret=${JWT_SECRET}
jwt.issuer=${JWT_ISSUER}

## Configuración para la autenticación con oAuth2.0
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

## Configuración de Paypal
paypal.client-id={PAYPAL_CLIENT_ID}
paypal.client-secret={PAYPAL_CLIENT_SECRET}

## Configuración de AWS S3
aws.bucket-name={AWS_BUCKET_NAME}
aws.bucket-region={AWS_BUCKET_REGION}
aws.person-landing-page.access-key={AWS_ACCESS_KEY}
aws.person-landing-page.secret-key={AWS_SECRET_KEY}